
variables:
  DOCKER_DRIVER: overlay
  VERSION: 1.0.1

image: docker:git

services:
  - docker:dind

stages:
  - compile
  - build
  - release

compile:app:
  stage: compile
  image: golang:1.9
  script:
    - git clone https://github.com/coreos/prometheus-operator $GOPATH/src/github.com/coreos/prometheus-operator
    - cd $GOPATH/src/github.com/coreos/prometheus-operator
    - git checkout v${VERSION}
    - CGO_ENABLED=0 go build -a -tags netgo -o operator github.com/coreos/prometheus-operator/cmd/operator"
    - ls -al
    - cp operator ${CI_PROJECT_DIR}/
  artifacts:
    when: on_success
    expire_in: 1 day 
    paths:
      - operator

build:master:
  stage: build
  dependencies:
    - compile:app
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - ls
    - cp operator 1.0/prometheus-operator
    - docker build -t "$CI_REGISTRY_IMAGE:latest" 1.0
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - master

build:branch:
  stage: build
  dependencies:
    - compile:app
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - cp operator 1.0/prometheus-operator
    - docker build -t "$CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}" 1.0
    - docker push "$CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}"
  only:
    - branches
  except:
    - master

release:master:
  stage: release
  dependencies:
    - compile:app
  script:
    - export VERSION=$(grep ' VERSION' 1.0/Dockerfile|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - cp operator 1.0/prometheus-operator
    - docker build -t "$CI_REGISTRY_IMAGE:v${VERSION}" 1.0
    - docker push "$CI_REGISTRY_IMAGE:v${VERSION}"
  only:
    - tags

